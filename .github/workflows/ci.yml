# ──────────────────────────────────────────────────────────────────────────────
#  tpm-job-finder-poc  ·  Continuous-Integration Pipeline (ci.yml)
#
#  ▸ Purpose
#    • Run basic quality gates each time code is pushed or a PR is opened.
#    • Keep the repository “green” before promoting dev → qa → uat → stage → main.
#
#  ▸ Why these steps?
#    1. **Unit tests**   – ensure core logic still passes. (pytest)
#    2. **Lint check**   – enforce a consistent code style. (ruff)
#
#  ▸ Environments & secrets
#    • No write-secrets needed; read-only workflow.
#    • Runs on any branch, but branch-protections require it to pass on:
#         dev / qa / uat / stage / main
#
#  ▸ How to extend
#    • Add more Python versions to the ‘matrix’ if desired.
#    • Add build / package / deploy jobs later; keep this one focused on fast
#      feedback (< 1 min typical).
# ──────────────────────────────────────────────────────────────────────────────
name: CI

on:
  push:
    branches: [ dev, qa, uat, stage, main ]
  pull_request:
    branches: [ dev, qa, uat, stage, main ]

jobs:
  test-and-lint:
    # ---- Why 'ubuntu-latest'? Cheapest/fastest hosted runner that supports Python 3.*
    runs-on: ubuntu-latest

    # ---- run the same steps for each Python version (easy to expand later)
    strategy:
      matrix:
        python-version: [ "3.11" ]

    steps:
    # 1️⃣  Fetch the repo so tests & linters can run
    - name: Checkout code
      uses: actions/checkout@v4

    # 2️⃣  Install the requested Python version
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: "pip"        # speeds up subsequent runs

    # 3️⃣  Install runtime + dev dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        # dev-only tools
        pip install pytest ruff

    # 4️⃣  Run unit tests (fail fast if any test breaks)
    - name: Run pytest
      env:
        PYTHONPATH: .
      run: pytest -q

    # 5️⃣  Static analysis / style check
    - name: Run ruff linter
      run: ruff check .

    # 6️⃣  (Optional) show summary in the Actions UI
    - name: Job summary
      if: always()
      run: |
        echo "### Test + Lint results" >> $GITHUB_STEP_SUMMARY
        echo "* Python version: ${{ matrix.python-version }}" >> $GITHUB_STEP_SUMMARY
